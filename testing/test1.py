import pymongo
import pandas as pd
from pymongo import MongoClient
from joblib import Parallel, delayed
import multiprocessing
import requests
import json
import time
# from flask import Flask, render_template, Markup, request, jsonify, make_response

# app = Flask(__name__)
str1 = '''#section:script_messages\n#output:messages\nStarting remote classes...\nWaiting for remote clients...\nExecuting test class...\n\n#output:debugOutput\nRemoteManager\u0027s tasks number: 1\nMessageSwitch.waitForRemoteClients: wait for 1 remote clients\nclients count is 0. wait ...\nopen to /172.18.0.5\n[1]: com.sun.jck.lib.MessageSwitch$Task@2d750345 started.\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: received 1\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: got name WebServer\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: received 3\n OK\nwaiting for remote clients succeeded\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: got send WebClient: setHost 28337f25019b\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: MessageSwitch.send: WebClient( setHost, 28337f25019b )\nopen to /172.18.0.5\n[2]: com.sun.jck.lib.MessageSwitch$Task@472ecdbd started.\ncom.sun.jck.lib.MessageSwitch$Task@472ecdbd: received 1\ncom.sun.jck.lib.MessageSwitch$Task@472ecdbd: got name WebClient\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: MessageSwitch.send finished\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: received 3\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: got send WebClient: setPort 43193\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: MessageSwitch.send: WebClient( setPort, 43193 )\ncom.sun.jck.lib.MessageSwitch$Task@2d750345: MessageSwitch.send finished\ncom.sun.jck.lib.MessageSwitch$Task@472ecdbd: received 3\ncom.sun.jck.lib.MessageSwitch$Task@472ecdbd: got send WebServer: shutdown\ncom.sun.jck.lib.MessageSwitch$Task@472ecdbd: MessageSwitch.send: WebServer( shutdown )\ncom.sun.jck.lib.MessageSwitch$Task@472ecdbd: MessageSwitch.send finished\n\n#section:remote.networkAgent\n#output:messages\nExecuting remote component via 28337f25019b,port\u003d12004,localport\u003d50962\n\n#output:log\n\n#output:ref\njava version \"1.7.0-internal-zing_99.99.99.99.dev\"\nZing Runtime Environment for Java Applications (build 1.7.0-internal-zing_99.99.99.99.dev-b396)\nZing 64-Bit Tiered VM (build 1.7.0-zing_99.99.99.99.dev-b3004-optimized-azlinuxM-X86_64, mixed mode)\n\n\n#section:testExecute\n#output:messages\ncommand: com.azulsystems.auto_red_green.jck.AzulExecJCKTestOtherJVMCmd LD_LIBRARY_PATH\u003d/export/workspace/zulu/7/jck/native-libs/x86_64 DISPLAY\u003d:1 HOME\u003d/home/user HOME\u003d/home/user TMP\u003d/export/workspace/ext/out/runtime/workdir TEMP\u003d/export/workspace/ext/out/runtime/workdir DISPLAY\u003d:1 LD_LIBRARY_PATH\u003d/export/workspace/zulu/7/jck/native-libs/x86_64/ /export/workspace/zing/bin/java -Djava.security.properties\u003d\u003d/export/workspace/ext/out/security/java.security -Djava.ext.dirs\u003d/export/workspace/zulu/7/jck/JCK-runtime-7/lib/extensions:/export/workspace/zing/jre/lib/ext -Djava.net.preferIPv4Stack\u003dtrue -Djdk.xml.maxXMLNameLimit\u003d4000 -Djdk.security.legacyDSAKeyPairGenerator\u003dtrue -Xverify -XX:+UseSTW -XX:+UseZST -Xfuture -classpath /export/workspace/zulu/7/jck/JCK-runtime-7/classes:/export/workspace/zing/lib/tools.jar:/export/workspace/aztools/ajt/bin -Djava.security.policy\u003d/export/workspace/zulu/7/jck/JCK-runtime-7/lib/jck.policy -Djava.rmi.activation.port\u003d12003 com.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.Client -t noActionHeaderOneWayTest -testSuiteRootDir /export/workspace/zulu/7/jck/JCK-runtime-7 -dplatform.mode\u003dstandalone -vehicle jck -djck.TestURL\u003dfile:/export/workspace/zulu/7/jck/JCK-runtime-7/tests/api/javax_xml/ws/wsa/w2j/document/literal/oneway/noActionHeaderOneWayTest.html#noActionHeaderOneWayTest -msgSwitch 28337f25019b:42204\n\n#output:out1\nJan 07, 2020 5:23:33 AM com.sun.xml.internal.messaging.saaj.client.p2p.HttpSOAPConnection post\nSEVERE: SAAJ0009: Message send failed\nSTATUS:Failed.Test case throws exception: noActionHeaderOneWayTest failed\n\n#output:out2\n************************************************************\n* props file set to \"/tmp/user-cts-props.txt\"\n************************************************************\n01-07-2020 05:23:32: Harness - ServiceEETest: 10 args: [-t, noActionHeaderOneWayTest, -testSuiteRootDir, /export/workspace/zulu/7/jck/JCK-runtime-7, -dplatform.mode\u003dstandalone, -vehicle, jck, -djck.TestURL\u003dfile:/export/workspace/zulu/7/jck/JCK-runtime-7/tests/api/javax_xml/ws/wsa/w2j/document/literal/oneway/noActionHeaderOneWayTest.html#noActionHeaderOneWayTest, -msgSwitch, 28337f25019b:42204]\n01-07-2020 05:23:32:  TRACE: in custom vehicle so call on EETest.\n01-07-2020 05:23:32:  TRACE: *** in EETest.run(argv,p)\n01-07-2020 05:23:32:  TRACE: TESTCLASS\u003dcom.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.Client\n01-07-2020 05:23:32:  TRACE: ABOUT TO GET SETUP METHOD!\n01-07-2020 05:23:32:  TRACE: GOT SETUP METHOD!\n01-07-2020 05:23:32:  TRACE: ** IN getRunMethod: testClass\u003dcom.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.Client\n01-07-2020 05:23:32:  TRACE: ** IN getRunMethod: testname\u003dnoActionHeaderOneWayTest\n01-07-2020 05:23:32:  TRACE: ** GOT RUN METHOD!\n01-07-2020 05:23:32:  TRACE: **runmethod\u003dnoActionHeaderOneWayTest\n01-07-2020 05:23:32:  TRACE: GOT CLEANUP METHOD!\n01-07-2020 05:23:32:  TRACE: ABOUT TO INVOKE SETUP METHOD!\n01-07-2020 05:23:32:  endpoint url\u003dhttp://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers\n01-07-2020 05:23:32:  wsdl url\u003dhttp://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers?wsdl\n01-07-2020 05:23:32:  Get URL\u0027s used by the test\n01-07-2020 05:23:32:  Service Endpoint URL: http://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers\n01-07-2020 05:23:32:  WSDL Location URL:    http://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers?wsdl\n01-07-2020 05:23:32:  JAXWS_Util.getPort(URL, QName, Class, QName, Class)\n01-07-2020 05:23:32:  JAXWS_Util.getPort(URL, QName, Class, QName, Class, WebServiceFeature[])\n01-07-2020 05:23:32:  URL\u003dhttp://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers?wsdl\n01-07-2020 05:23:32:  siName\u003d{http://example.com}AddNumbersService\n01-07-2020 05:23:32:  siClass\u003dcom.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.AddNumbersService\n01-07-2020 05:23:32:  portName\u003d{http://example.com}AddNumbersPort\n01-07-2020 05:23:32:  seiClass\u003dcom.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.AddNumbersPortType\n01-07-2020 05:23:32:  Get stub/proxy for seiClass -\u003e com.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.AddNumbersPortType, port -\u003e{http://example.com}AddNumbersPort\n01-07-2020 05:23:33:  Obtained stub/proxy\u003dJAX-WS RI 2.2.4-b01: Stub for http://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers\n01-07-2020 05:23:33:  port\u003dJAX-WS RI 2.2.4-b01: Stub for http://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers\n01-07-2020 05:23:33:  Set target endpoint address to\u003dhttp://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers ...\n01-07-2020 05:23:33:  setup ok\n01-07-2020 05:23:33:  TRACE: INVOKED SETUP METHOD!\n01-07-2020 05:23:33:  TRACE: ABOUT TO INVOKE EETEST RUN METHOD!\n01-07-2020 05:23:33:  noActionHeaderOneWayTest\n01-07-2020 05:23:33:  -------------------\n01-07-2020 05:23:33:  Logging SOAPRequest\n01-07-2020 05:23:33:  -------------------\n01-07-2020 05:23:33:  \u003c?xml version\u003d\"1.0\" ?\u003e\u003cS:Envelope xmlns:S\u003d\"http://schemas.xmlsoap.org/soap/envelope/\"\u003e\u003cS:Header\u003e\u003cTo xmlns\u003d\"http://www.w3.org/2005/08/addressing\"\u003ehttp://28337f25019b:43193/WSAW2JDLOneWayTest_web/jaxws/AddNumbers\u003c/To\u003e\u003c/S:Header\u003e\u003cS:Body\u003e\u003caddNumbers xmlns\u003d\"http://example.com\"\u003e\u003cnumber1\u003e10\u003c/number1\u003e\u003cnumber2\u003e10\u003c/number2\u003e\u003c/addNumbers\u003e\u003c/S:Body\u003e\u003c/S:Envelope\u003e\n01-07-2020 05:23:33:  ***** makeRequest via SAAJ first *****\n01-07-2020 05:23:33:  ***** makeRequest via HTTP second *****\n01-07-2020 05:23:33:  Charset name\u003dUTF-8\n01-07-2020 05:23:33:  Setting HTTP_HEADER: SOAPAction\u003d\"\"\n01-07-2020 05:23:33:  Setting HTTP_HEADER: Content-Type\u003dtext/xml; charset\u003dUTF-8\n01-07-2020 05:23:33:  ERROR: Caught unexpected exception: null\n01-07-2020 05:23:33:  ERROR: java.lang.IndexOutOfBoundsException\n\tat java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:151)\n\tat com.sun.xml.internal.messaging.saaj.soap.MessageImpl.writeTo(MessageImpl.java:1314)\n\tat com.sun.ts.tests.jaxws.sharedclients.SOAPClient.getResponseAsString(SOAPClient.java:185)\n\tat com.sun.ts.tests.jaxws.sharedclients.SOAPClient.makeSaajRequest(SOAPClient.java:101)\n\tat com.sun.ts.tests.jaxws.sharedclients.SOAPClient.makeSaajRequest(SOAPClient.java:90)\n\tat com.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.Client.noActionHeaderOneWayTest(Client.java:265)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat com.sun.ts.lib.harness.EETest.run(EETest.java:255)\n\tat com.sun.ts.lib.harness.ServiceEETest.run(ServiceEETest.java:95)\n\tat com.sun.ts.lib.harness.EETest.getPropsReady(EETest.java:418)\n\tat com.sun.ts.lib.harness.ServiceEETest.run(ServiceEETest.java:238)\n\tat com.sun.ts.lib.harness.EETest.run(EETest.java:316)\n\tat com.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.Client.main(Client.java:108)\n\n01-07-2020 05:23:33:  ERROR: Exception at: \n01-07-2020 05:23:33:  ERROR: java.lang.IndexOutOfBoundsException\n\tat java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:151)\n\tat com.sun.xml.internal.messaging.saaj.soap.MessageImpl.writeTo(MessageImpl.java:1314)\n\tat com.sun.ts.tests.jaxws.sharedclients.SOAPClient.getResponseAsString(SOAPClient.java:185)\n\tat com.sun.ts.tests.jaxws.sharedclients.SOAPClient.makeSaajRequest(SOAPClient.java:101)\n\tat com.sun.ts.tests.jaxws.sharedclients.SOAPClient.makeSaajRequest(SOAPClient.java:90)\n\tat com.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.Client.noActionHeaderOneWayTest(Client.java:265)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat com.sun.ts.lib.harness.EETest.run(EETest.java:255)\n\tat com.sun.ts.lib.harness.ServiceEETest.run(ServiceEETest.java:95)\n\tat com.sun.ts.lib.harness.EETest.getPropsReady(EETest.java:418)\n\tat com.sun.ts.lib.harness.ServiceEETest.run(ServiceEETest.java:238)\n\tat com.sun.ts.lib.harness.EETest.run(EETest.java:316)\n\tat com.sun.ts.tests.jaxws.wsa.w2j.document.literal.oneway.Client.main(Client.java:108)\n\n01-07-2020 05:23:33:  cleanup ok\n01-07-2020 05:23:34:  TRACE: SLEPT FOR:  1000\n\n'''

test = '''api/javax_xml/ws/wsa/w2j/document/literal/oneway/noActionHeaderOneWayTest.html#noActionHeaderOneWayTest'''

def getQueryData(testName=None):
    client = MongoClient('mongodb://onega:27017')
    db = client.AutoRedGreen
    collection = db.QUERY
    if testName is None:
        data = pd.DataFrame(list(collection.find()))
    else:
        data = pd.DataFrame(list(collection.find({"test": testName})))

    return data

def getResults(testName):
    resultDF = getQueryData(testName)
    return resultDF

def processed_result(str1, str2):
    json_data = {'str1': str1, 'str2': str2}
    headers = {
        'Content-Type': 'application/json',
    }
    response = requests.post('http://thames:8080/curldump/', json=json_data, headers=headers)

    return (response.json())

testName = test
checking_string = str1 + str1 + str1
# all_results = getResults(testName)
# while True:
    # results = Parallel(n_jobs=10, backend='threading', verbose=100)(delayed(processed_result)(i['output'], checking_string) for a, i in all_results.iterrows())
    # results = Parallel(n_jobs=10, backend='multiprocessing', verbose=100)(delayed(processed_result)(str1, checking_string) for i in range(0,500))
results = Parallel(n_jobs=10, backend='multiprocessing', verbose=100)(delayed(processed_result)(str1, checking_string) for i in range(0,100))
    # print(results)